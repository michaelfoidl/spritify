name: development
on:
  push:
    branches: [ development ]
env:
  dotnet-version: '5.0.x'
  nuget-cache: ~/.nuget/packages
  node-version: '14.17.x'
  npm-cache: ~/.npm/packages
jobs:
  build-common:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Build Spritify.Common
        id: build
        uses: ./.github/actions/build-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./common
          nuget-cache: ${{ env.nuget-cache }}
          artifact-name: spritify-common
  build-testFramework:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    needs: build-common
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Restore Spritify.Common
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-common.outputs.artifact-key }}
      - name: Build Spritify.TestFramework
        id: build
        uses: ./.github/actions/build-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./testFramework
          nuget-cache: ${{ env.nuget-cache }}
          artifact-name: spritify-testFramework
  build-workflow:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    needs: build-common
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Restore Spritify.Common
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-common.outputs.artifact-key }}
      - name: Build Spritify.Workflow
        id: build
        uses: ./.github/actions/build-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./workflow
          nuget-cache: ${{ env.nuget-cache }}
          artifact-name: spritify-workflow
          test-projects: false
  build-api:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    needs: build-common
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Restore Spritify.Common
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-common.outputs.artifact-key }}
      - name: Build Spritify.Api
        id: build
        uses: ./.github/actions/build-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./api
          nuget-cache: ${{ env.nuget-cache }}
          artifact-name: spritify-api
  build-web:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    needs: build-common
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Restore Spritify.Common
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-common.outputs.artifact-key }}
      - name: Build Spritify.Web (1/2)
        id: build
        uses: ./.github/actions/build-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./web
          nuget-cache: ${{ env.nuget-cache }}
          artifact-name: spritify-web
      - name: Build Spritify.Web (2/2)
        uses: ./.github/actions/build-node
        with:
          node-version: ${{ env.node-version }}
          root-directory: ./web
          npm-cache: ${{ env.npm-cache }}
          npm-cache-version: '2'
          artifact-name: spritify-web
  build-workflow-test:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    needs: [ build-testFramework, build-workflow ]
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Restore Spritify.TestFramework
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-testFramework.outputs.artifact-key }}
      - name: Restore Spritify.Workflow
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-workflow.outputs.artifact-key }}
      - name: Build Spritify.Workflow.Test
        id: build
        uses: ./.github/actions/build-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./workflow
          nuget-cache: ${{ env.nuget-cache }}
          artifact-name: spritify-workflow-test
          test-projects: true
  test-workflow:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.test.outputs.artifact-key }}
    needs: build-workflow-test
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Restore Spritify.Workflow.Test
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-workflow-test.outputs.artifact-key }}
      - name: UnitTest Spritify.Workflow
        id: test
        uses: ./.github/actions/test-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./workflow
          artifact-name: spritify-workflow
          test-category: UnitTest
  publish-api:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.publish.outputs.artifact-key }}
    needs: build-api
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Publish Spritify.Api
        id: publish
        uses: ./.github/actions/publish-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./api
          artifact-name: spritify-api
  publish-web:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.publish.outputs.artifact-key }}
    needs: build-web
    steps:
      - uses: actions/checkout@v2
      - name: Publish Spritify.Web (1/2)
        id: publish
        uses: ./.github/actions/publish-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./web
          artifact-name: spritify-web
      - name: Publish Spritify.Web (2/2)
        uses: ./.github/actions/publish-node
        with:
          root-directory: ./web
          artifact-name: spritify-web
  publish-test-results:
    runs-on: ubuntu-latest
    needs: test-workflow
    if: always()
    env:
      test-results-folder: ~/.test
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Restore Spritify.Workflow.Test results
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.test-workflow.outputs.artifact-key }}
          path : ${{ env.test-results-folder }}
      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test Results
          path: ${{ env.test-results-folder }}/**.trx
          reporter: dotnet-trx
  deploy:
    runs-on: ubuntu-latest
    needs: [ publish-api, publish-web ]
    env:
      api-package-folder: ~/.publish/api
      web-package-folder: ~/.publish/web
    steps:
      - name: Get Spritify.Api package
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.publish-api.outputs.artifact-key }}
          path: ${{ env.api-package-folder }}
      - name: Get Spritify.Web package
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.publish-web.outputs.artifact-key }}
          path: ${{ env.web-package-folder }}
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_HOST_SIGNATURE }}" >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/github
          echo "IdentityFile ~/.ssh/github" >> ~/.ssh/config
          chmod -R 700 ~/.ssh  
      - name: Deploy Spritify.Api
        run: |
          rsync -avz -e ssh --delete ${{ env.api-package-folder }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/staging/spritify
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cp -r /var/www/staging/spritify/configuration/api/* /var/www/staging/spritify/api'
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '/var/www/staging/spritify/startup/api'
      - name: Deploy Spritify.Web
        run: |
          rsync -avz -e ssh --delete ${{ env.web-package-folder }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/staging/spritify
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cp -r /var/www/staging/spritify/configuration/web/* /var/www/staging/spritify/web'
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '/var/www/staging/spritify/startup/web'
