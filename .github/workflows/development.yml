name: development
on:
  push:
    branches: [ development ]
  workflow_dispatch:
    inputs:
      git-ref:
            description: Git Ref (latest version by default)    
            required: false
env:
  dotnet-version: '5.0.x'
  node-version: '14.17.x'
jobs:
  build-common:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} == ""
      - name: Checkout specified version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} != """
        with:
          ref: ${{ inputs.git-ref }}
      - name: Build Spritify.Common
        id: build
        uses: ./.github/steps/build-common
        with:
          dotnet-version: ${{ env.dotnet-version }}
  build-testFramework:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    needs: build-common
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} == ""
      - name: Checkout specified version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} != """
        with:
          ref: ${{ inputs.git-ref }}
      - name: Build Spritify.TestFramework
        id: build
        uses: ./.github/steps/build-testFramework
        with:
          dotnet-version: ${{ env.dotnet-version }}
          build-common-artifact-key: ${{ needs.build-common.outputs.artifact-key }}
  build-workflow:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    needs: build-common
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} == ""
      - name: Checkout specified version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} != """
        with:
          ref: ${{ inputs.git-ref }}
      - name: Build Spritify.Workflow
        id: build
        uses: ./.github/steps/build-workflow
        with:
          dotnet-version: ${{ env.dotnet-version }}
          build-common-artifact-key: ${{ needs.build-common.outputs.artifact-key }}
  build-api:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    needs: build-common
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} == ""
      - name: Checkout specified version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} != """
        with:
          ref: ${{ inputs.git-ref }}
      - name: Build Spritify.Api
        id: build
        uses: ./.github/steps/build-api
        with:
          dotnet-version: ${{ env.dotnet-version }}
          build-common-artifact-key: ${{ needs.build-common.outputs.artifact-key }}
  build-web:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    needs: build-common
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} == ""
      - name: Checkout specified version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} != """
        with:
          ref: ${{ inputs.git-ref }}
      - name: Build Spritify.Web
        id: build
        uses: ./.github/steps/build-web
        with:
          dotnet-version: ${{ env.dotnet-version }}
          node-version: ${{ env.node-version }}
          build-common-artifact-key: ${{ needs.build-common.outputs.artifact-key }}
  build-workflow-test:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.build.outputs.artifact-key }}
    needs: [ build-testFramework, build-workflow ]
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} == ""
      - name: Checkout specified version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} != """
        with:
          ref: ${{ inputs.git-ref }}
      - name: Build Spritify.Workflow.Test
        id: build
        uses: ./.github/steps/build-workflow-test
        with:
          dotnet-version: ${{ env.dotnet-version }}
          build-testFramework-artifact-key: ${{ needs.build-testFramework.outputs.artifact-key }}
          build-workflow-artifact-key: ${{ needs.build-workflow.outputs.artifact-key }}
  test-workflow:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.test.outputs.artifact-key }}
    needs: build-workflow-test
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} == ""
      - name: Checkout specified version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} != """
        with:
          ref: ${{ inputs.git-ref }}
      - name: UnitTest Spritify.Workflow
        id: test
        uses: ./.github/steps/test-workflow
        with:
          dotnet-version: ${{ env.dotnet-version }}
          build-workflow-test-artifact-key: ${{ needs.build-workflow-test.outputs.artifact-key }}
  publish-api:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.publish.outputs.artifact-key }}
    needs: build-api
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} == ""
      - name: Checkout specified version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} != """
        with:
          ref: ${{ inputs.git-ref }}
      - name: Publish Spritify.Api
        id: publish
        uses: ./.github/steps/publish-api
        with:
          dotnet-version: ${{ env.dotnet-version }}
  publish-web:
    runs-on: ubuntu-latest
    outputs:
      artifact-key: ${{ steps.publish.outputs.artifact-key }}
    needs: build-web
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} == ""
      - name: Checkout specified version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} != """
        with:
          ref: ${{ inputs.git-ref }}
      - name: Publish Spritify.Web
        id: publish
        uses: ./.github/steps/publish-web
        with:
          dotnet-version: ${{ env.dotnet-version }}
  publish-testResults:
    runs-on: ubuntu-latest
    needs: test-workflow
    if: always()
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} == ""
      - name: Checkout specified version
        uses: actions/checkout@v2
        if: ${{ inputs.git-ref }} != """
        with:
          ref: ${{ inputs.git-ref }}
      - name: Restore Spritify.Workflow.Test results
        uses: ./.github/steps/publish-testResults
        with:
          test-workflow-artifact-key: ${{ needs.test-workflow.outputs.artifact-key }}
  deploy:
    runs-on: ubuntu-latest
    needs: [ publish-api, publish-web ]
    env:
      api-package-folder: ~/.publish/api
      web-package-folder: ~/.publish/web
    steps:
      - name: Get Spritify.Api package
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.publish-api.outputs.artifact-key }}
          path: ${{ env.api-package-folder }}
      - name: Get Spritify.Web package
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.publish-web.outputs.artifact-key }}
          path: ${{ env.web-package-folder }}
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_HOST_SIGNATURE }}" >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/github
          echo "IdentityFile ~/.ssh/github" >> ~/.ssh/config
          chmod -R 700 ~/.ssh  
      - name: Deploy Spritify.Api
        run: |
          rsync -avz -e ssh --delete ${{ env.api-package-folder }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/staging/spritify
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cp -r /var/www/staging/spritify/configuration/api/* /var/www/staging/spritify/api'
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '/var/www/staging/spritify/startup/api'
      - name: Deploy Spritify.Web
        run: |
          rsync -avz -e ssh --delete ${{ env.web-package-folder }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/staging/spritify
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cp -r /var/www/staging/spritify/configuration/web/* /var/www/staging/spritify/web'
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '/var/www/staging/spritify/startup/web'
