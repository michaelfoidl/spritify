name: development
on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]
  workflow_dispatch:
jobs:
  build-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - uses: actions/cache@v2
        id: nuget-cache
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Restore Nuget Packages
        if: steps.nuget-cache.outputs.cache-hit != 'true'
        run: |
          dotnet restore ./Spritify/Spritify.csproj
      - name: Build Spritify API
        run: |
          dotnet build ./Spritify/Spritify.csproj
  build-web:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - uses: actions/setup-node@v2
        with:
          node-version: '14.17.x'
      - uses: actions/cache@v2
        id: nuget-cache
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ~/.npm/packages
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Restore Nuget Packages
        if: steps.nuget-cache.outputs.cache-hit != 'true'
        run: |
          dotnet restore ./Spritify.Web/Spritify.Web.csproj
      - name: Restore npm Packages
        working-directory: ./web/Sprifify.Web.Ui
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Build Spritify.Web
        run: |
          dotnet build ./Spritify.Web/Spritify.Web.csproj
      - name: Build Spritify.Web.Ui
        working-directory: ./web/Sprifify.Web.Ui
        run: npm run build