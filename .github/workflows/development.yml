name: development
on:
  push:
    branches: [ development ]
  workflow_dispatch:
jobs:
  build-common:
    runs-on: ubuntu-latest
    env:
      dotnet-version: '5.0.x'
      nuget-cache: ~/.nuget/packages/development/common
      nuget-cache-version: 1
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Build Spritify.Common
        uses: ./.github/actions/build-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./common
          nuget-cache: ${{ env.nuget-cache }}
          nuget-cache-version: ${{ env.nuget-cache-version }}
          artifact-name: spritify-common-build-${{ github.sha }}
  build-api:
    runs-on: ubuntu-latest
    needs: build-common
    env:
      dotnet-version: '5.0.x'
      nuget-cache: ~/.nuget/packages/development/api
      nuget-cache-version: 1
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Restore Spritify.Common build artifacts
        uses: actions/download-artifact@v2
        with:
          name: spritify-common-build-${{ github.sha }}
      - name: Build Spritify.Api
        uses: ./.github/actions/build-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./api
          nuget-cache: ${{ env.nuget-cache }}
          nuget-cache-version: ${{ env.nuget-cache-version }}
          artifact-name: spritify-api-build-${{ github.sha }}
  build-web:
    runs-on: ubuntu-latest
    needs: build-common
    env:
      dotnet-version: '5.0.x'
      nuget-cache: ~/.nuget/packages/development/web
      nuget-cache-version: 1
      node-version: '14.17.x'
      npm-cache: ~/.npm/packages/development/web
      npm-cache-version: 2
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Restore Spritify.Common build artifacts
        uses: actions/download-artifact@v2
        with:
          name: spritify-common-build-${{ github.sha }}
      - name: Build Spritify.Web (1/2)
        uses: ./.github/actions/build-dotnet
        with:
          dotnet-version: ${{ env.dotnet-version }}
          root-directory: ./web
          nuget-cache: ${{ env.nuget-cache }}
          nuget-cache-version: ${{ env.nuget-cache-version }}
          artifact-name: spritify-web-build-${{ github.sha }}
      - name: Build Spritify.Web (2/2)
        uses: ./.github/actions/build-node
        with:
          node-version: ${{ env.node-version }}
          root-directory: ./web
          npm-cache: ${{ env.npm-cache }}
          npm-cache-version: ${{ env.npm-cache-version }}
          artifact-name: spritify-web-build-${{ github.sha }}
  publish-api:
    runs-on: ubuntu-latest
    needs: build-api
    env:
      output-folder: ~/.publish/api
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v2
      - name: Restore build artifacts
        uses: actions/download-artifact@v2
        with:
          name: spritify-api-build-${{ github.sha }}
      - name: Publish Spritify API
        run: |
          dotnet publish ./Spritify.Api/Spritify.Api.csproj --configuration Release --output ${{ env.output-folder }} --no-build
          dotnet publish ./common/Spritify.Api.Common/Spritify.Api.Common.csproj --configuration Release --output ${{ env.output-folder }} --no-build
          dotnet publish ./common/Spritify.Api.Common.Interfaces/Spritify.Api.Common.Interfaces.csproj --configuration Release --output ${{ env.output-folder }} --no-build
          dotnet publish ./core/Spritify.Api.Core/Spritify.Api.Core.csproj --configuration Release --output ${{ env.output-folder }} --no-build
          dotnet publish ./core/Spritify.Api.Core.Interfaces/Spritify.Api.Core.Interfaces.csproj --configuration Release --output ${{ env.output-folder }} --no-build
          dotnet publish ./core/Spritify.Api.Core.Entities/Spritify.Api.Core.Entities.csproj --configuration Release --output ${{ env.output-folder }} --no-build
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: spritify-api-${{ github.sha }}
          path: ${{ env.output-folder }}
  publish-web:
    runs-on: ubuntu-latest
    needs: build-web
    env:
      output-folder: ~/.publish/web
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v2
      - name: Restore build artifacts
        uses: actions/download-artifact@v2
        with:
          name: spritify-web-build-${{ github.sha }}
      - name: Publish Spritify Web
        run: |
          dotnet publish ./Spritify.Web/Spritify.Web.csproj --configuration Release --output ${{ env.output-folder }} --no-build
      - name: Publish Spritify Web UI
        working-directory: ./web/Spritify.Web.Ui
        run: |
          mkdir ${{ env.output-folder }}/wwwroot
          cp -r ./dist/spritify/* ${{ env.output-folder }}/wwwroot
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: spritify-web-${{ github.sha }}
          path: ${{ env.output-folder }}
  deploy:
    runs-on: ubuntu-latest
    needs: [ publish-api, publish-web ]
    env:
      api-package-folder: ~/.publish/api
      web-package-folder: ~/.publish/web
    steps:
      - name: Get Spritify API package
        uses: actions/download-artifact@v2
        with:
          name: spritify-api-${{ github.sha }}
          path: ${{ env.api-package-folder }}
      - name: Get Spritify Web package
        uses: actions/download-artifact@v2
        with:
          name: spritify-web-${{ github.sha }}
          path: ${{ env.web-package-folder }}
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_HOST_SIGNATURE }}" >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/github
          echo "IdentityFile ~/.ssh/github" >> ~/.ssh/config
          chmod -R 700 ~/.ssh  
      - name: Deploy Spritify API
        run: |
          rsync -avz -e ssh --delete ${{ env.api-package-folder }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/staging/spritify
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cp -r /var/www/staging/spritify/configuration/api/* /var/www/staging/spritify/api'
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '/var/www/staging/spritify/startup/api'
      - name: Deploy Spritify Web
        run: |
          rsync -avz -e ssh --delete ${{ env.web-package-folder }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/staging/spritify
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cp -r /var/www/staging/spritify/configuration/web/* /var/www/staging/spritify/web'
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '/var/www/staging/spritify/startup/web'
