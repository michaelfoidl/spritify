name: store-cache
description: 'Caches the given files'
inputs:
  artifact-key:
    description: 'Key of the artifact to store (can be omitted if collaboration-mode is set to "prepare" or "collect")'
    required: false
    default: ''
  artifact-mode:
    description: 'Defines which items to include in the artifact (can be omitted if collaboration-mode is set to "prepare" or "collect") - supported are "dotnet" and "node"'
    required: false
    default: ''
  collaboration-mode:
    description: 'Defines how to handle multiple artifacts created during the same job - "prepare" prepares the artifact folder, "append" adds the results from this step to any existing artifacts, "collect" takes existing artifacts and bundles them into one result, "default" combines all previous options into a single step'
    required: false
    default: 'default'
runs:
  using: 'composite'
  steps:
  - name: Checking collaboration mode
    shell: bash
    run: |
      if [ ${{ inputs.collaboration-mode }} == "default" ];
      then
      echo "Collaboration mode: default";
      elif [ ${{ inputs.collaboration-mode }} == "prepare" ];
      then
      echo "Collaboration mode: prepare";
      elif [ ${{ inputs.collaboration-mode }} == "collect" ];
      then
      echo "Collaboration mode: collect";
      elif [ ${{ inputs.collaboration-mode }} == "append" ];
      then
      echo "Collaboration mode: append";
      else
      echo "Unknown collaboration mode: ${{ inputs.collaboration-mode }}.";
      exit 1;
      fi
  - name: Create and/or reset cache directory
    if: inputs.collaboration-mode == 'default' || inputs.collaboration-mode == 'prepare'
    shell: bash
    run: |
      mkdir -p ~/.artifacts
      rm -rf ~/.artifacts/*
  - name: Initialize cache
    uses: actions/cache@v2
    if: inputs.collaboration-mode == 'default' || inputs.collaboration-mode == 'collect'
    with:
      key: ${{ inputs.artifact-key }}
      path: ~/.artifacts
  - name: Copy files to cache
    if: inputs.collaboration-mode == 'default' || inputs.collaboration-mode == 'append'
    shell: bash
    run: |
      echo "::group::Look for artifact items"
      if [ ${{ inputs.artifact-mode }} == "dotnet" ];
      then
      echo "Artifact mode: dotnet";
      ARGS="-regex \".*/\(bin\|obj\)$\"";
      elif [ ${{ inputs.artifact-mode }} == "node" ];
      then
      echo "Artifact mode: node";
      ARGS="! -regex \".*/node_modules/.*\" -regex \".*/\dist$\"";
      else
      echo "Unknown artifact mode: ${{ inputs.artifact-mode }}.";
      exit 1;
      fi
      echo "::endgroup::"
      eval "find . $ARGS" | xargs -I {} cp -r --parents {}  ~/.artifacts
  - name: Debug
    shell: bash
    run: |
      echo "::group::Artifact content::"
      find ~/.artifacts
      echo "::endgroup::"