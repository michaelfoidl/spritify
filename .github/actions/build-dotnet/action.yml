name: build-dotnet
description: 'Builds the given .NET project(s).'
inputs:
  dotnet-version:
    description: '.NET Version to use'
    required: true
  root-directory:
    description: 'Path to the root directory of the project - all projects inside this directory are built'
    required: true
  nuget-cache-version:
    description: 'Version of the Nuget cache - changing the version allows cache invalidation without making changes to the source code'
    required: false
    default: '1'
  artifact-name:
    description: 'Name of the build artifact'
    required: true
  test-projects:
    description: 'If set to true, only test projects are built. If set to false, all projects except test projects are built. If not set, all projects are built.'
    required: false
    default: ''
  is-collaborative-build:
    description: 'If set to true, artifacts created during this build are collected, but not yet stored - this has to be done in a manual step afterwards.'
    required: false
    default: false
outputs:
  artifact-key:
    description: 'Key to the build artifact'
    value: ${{ steps.artifact-key.outputs.key }}
runs:
  using: 'composite'
  steps:
  - name: Setup .NET
    uses: actions/setup-dotnet@v1
    with:
      dotnet-version: ${{ inputs.dotnet-version }}
  - name: Normalize path
    id: normalize-path
    uses: ./.github/actions/normalize-path
    with:
      path: ${{ inputs.root-directory }}
  - name: Create artifact key
    id: artifact-key
    uses: ./.github/actions/create-artifact-key
    with:
      artifact-name: ${{ inputs.artifact-name }}
      is-build-artifact: true
  - name: Find projects to build
    uses: ./.github/actions/find-projects
    id: find-projects
    with:
      root-directory: ${{ inputs.root-directory }}
      project-name-schema: '*.csproj'
      test-projects: ${{ inputs.test-projects }}
  - name: Nuget Restore
    shell: bash
    working-directory: ${{ github.workspace }}/${{ steps.normalize-path.outputs.path }}
    run: |
      echo "::group::Nuget Restore"
      echo ${{ steps.find-projects.outputs.projects }} | tr " " "\n" | xargs -I {} dotnet restore {} --packages ~/.nuget/packages --no-dependencies
      echo "::endgroup::"
  - name: Build
    shell: bash
    working-directory: ${{ github.workspace }}/${{ steps.normalize-path.outputs.path }}
    run: |
      echo "::group::Build"
      echo ${{ steps.find-projects.outputs.projects }} | tr " " "\n" | xargs -I {} dotnet build {} --configuration Release --verbosity minimal --no-restore --source ~/.nuget/packages
      echo "::endgroup::"
  - name: Cache artifact
    uses: ./.github/actions/store-cache
    with:
      artifact-key: ${{ steps.artifact-key.outputs.key }}
      artifact-mode: dotnet
      collaboration-mode: ${{ inputs.is-collaborative-build && 'collect' || 'default' }}